(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{438:function(s,a,t){"use strict";t.r(a);var n=t(5),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",[s._v("JavaScript是单线程的")]),s._v(" "),t("p",[s._v("Google V8引擎是一个比较流行的JavaScript引擎示例，V8 引擎是在诸如 Chrome 和 Node.js 等内部使用的。")]),s._v(" "),t("p",[s._v("该引擎包括两个主要组件：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Memory Heap 内存堆 ——  这是内存分配发生的地方")])]),s._v(" "),t("li",[t("p",[s._v("Call Stack 调用堆栈 ——  这是在你代码执行时栈帧存放的位置")])])])]),s._v(" "),t("h1",{attrs:{id:"call-stack-调用堆栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#call-stack-调用堆栈"}},[s._v("#")]),s._v(" Call Stack 调用堆栈")]),s._v(" "),t("p",[s._v("JavaScript是单线程的，这意味着他只有一个Call Stack。 因此，它一次只能做一件事。")]),s._v(" "),t("p",[s._v("例如下面这段代码")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("上面的代码将是这样执行：")]),s._v(" "),t("p",[s._v("1、忽略前面所有函数  直接到bar()\n2、把bar()添加到调用栈列表\n3、执行bar()中代码")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("  调用堆栈列表\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" bar\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("4、执行到函数foo()\n5、把foo()添加到调用栈中，栈列表如下：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" foo\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" bar\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("6、执行foo()中代码，直到执行为完毕，输出foo\n7、删除调用栈中foo函数，此时栈中列表：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" bar\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("8、执行栈中bar函数，直到完毕，输出bar\n9、删除占中bar函数，此时调用栈为空")]),s._v(" "),t("h1",{attrs:{id:"堆栈溢出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆栈溢出"}},[s._v("#")]),s._v(" 堆栈溢出")]),s._v(" "),t("p",[s._v("通常递归的话比较容易出现这种情况")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("当引擎开始执行这段代码的时候，它开始调用foo()函数，然而foo是一个递归，并且没有结束条件，因此会一直往堆栈中添加foo函数\n然而，调用堆栈中函数调用的数量超出了调用堆栈的实际大小，就会出现堆栈溢出。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://imgchr.com/i/keMKMV",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://s2.ax1x.com/2019/01/24/keMKMV.png",alt:"堆栈溢出.png"}}),t("OutboundLink")],1)]),s._v(" "),t("h1",{attrs:{id:"并发-事件循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并发-事件循环"}},[s._v("#")]),s._v(" 并发&事件循环")]),s._v(" "),t("p",[s._v("当我们打开网站时，网页的渲染过程就是一大堆同步任务，如果这些任务需要花费大量时间才能处理。大多数浏览器会通过触发错误来采取行动，询问你是否要终止网页。")]),s._v(" "),t("p",[s._v("如何解决这一现象？ 解决方案就是异步回调")])])}),[],!1,null,null,null);a.default=e.exports}}]);